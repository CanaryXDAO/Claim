{"version":3,"sources":["../../src/index.ts"],"names":["chainIdToNetwork","PortisConnector","dAppId","networks","config","chainIds","Number","n","supportedChainIds","handleOnLogout","handleOnActiveWalletChanged","account","handleOnError","accounts","provider","portis","m","Portis","deactivate","chainId","newNetwork","AbstractConnector","emitUpdate","ConnectorEvent","emitError","emitDeactivate"],"mappings":"iTAIA,IAAMA,EAAkD,CACtD,EADsD,UAEtD,EAFsD,UAGtD,EAHsD,UAItD,EAJsD,SAKtD,GALsD,QAMtD,IANsD,OAOtD,GAPsD,SAQtD,GARsD,gBAStD,GATsD,OAUtD,GAVsD,QAWtD,GAXsD,UAYtD,EAZsD,OAatD,IAbsD,cActD,GAdsD,qBAetD,IAfsD,eAgBtD,IAhBsD,OAiBtD,MAAO,gBAWIC,EAAb,Y,QAOE,c,MAAcC,WAAQC,a,IAAUC,oBAAS,KACjCC,EAAW,OAAa,kBAAgB,sBAA4BC,OAAOC,EAAnD,QAA9B,I,OAEEF,SAAe,oBAAkBL,EAAlB,EADjB,sBAIA,cAAM,CAAEQ,kBAAmBH,KAA3B,MAEA,SACA,aACA,WAEA,iBAAsB,wBAAtB,IACA,8BAAmC,qCAAnC,IACA,gBAAqB,uBAArB,I,CACD,C,EAtBH,G,EAAA,G,6EAAA,0CAwBUI,WAIN,qBA5BJ,gCA+BUC,YAIN,gBAAgB,CAAEC,WAnCtB,kBAsCUC,YAIN,iBA1CJ,4B,wBAuDI,kBAAqB,EAArB,gBACA,+BAAkC,EAAlC,6BACA,iBAAoB,EAApB,e,gBAEsB,iCAAmC,mBAAgCC,EAAhC,EAAnC,oBAAhBF,GAEN,MAAO,CAAEG,SAAU,SAAZ,SAAkCH,U,OAfpC,K,iBAAA,EAAKI,O,uBACa,0CAA4B,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,GAA7B,oBAAfC,GACN,SAAc,MACZ,EADY,OAEZ,kBAAO,WAAP,GAAuCjB,EAAiB,WAAxD,IAA6E,WAFjE,GAGZ,EAHF,O,sDAhDN,kEAiEI,uBAAO,YAAP,SAjEJ,iEAqEI,uBAAO,0BAAP,eArEJ,iEAyEI,uBAAO,gDAA+C,mBAAgCa,EAAhC,EAAtD,IAzEJ,kDA4ESK,WACL,sBAAqB,WAArB,IACA,mCAAkC,WAAlC,IACA,qBAAoB,WAApB,GA/EJ,oC,MAqFM,K,MAFF,kBAAI,GACUlB,EAAZ,oBACA,uBAA0BA,EAA1B,MACA,aAAgB,CAAEmB,QAASC,MAE3B,4BACA,aAAgB,CAAED,QAASb,OAAOc,EAAD,Y,iBAzFvC,4D,MA8FU,K,uBAAA,oCACN,kB,GA/FJ,4C,6FA7BsBC,EAAtB,Y,4BAGgBb,Q,MAAkD,CAAC,EAAD,GAAlDA,kB,6BAEZ,oB,oHALJ,WAcYc,Y,KAIR,KAAUC,IAAV,SAlBJ,E,EAAA,UAqBYC,Y,KAIR,KAAUD,IAAV,QAzBJ,E,EAAA,eA4BYE,W,KAIR,KAAUF,IAAV,WAhCJ,E,EAAA,gB","file":"static/js/15.af61e462.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}